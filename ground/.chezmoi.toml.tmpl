{{- $realSrc := "" -}}

{{- $src := .chezmoi.sourceDir }}
{{- if eq .chezmoi.os "windows" -}}
	{{- $args := list
		"-NoProfile"
		"-NonInteractive"
		"-Command" (printf "Resolve-Path -LiteralPath '%s' | Select-Object -ExpandProperty ProviderPath" $src)
	-}}
	{{- $realSrc = (outputList "powershell.exe" $args) | trim -}}
{{- else if eq .chezmoi.os "darwin" -}}
	{{- $bashCmd := printf "command -v realpath >/dev/null && realpath %1$s || command -v greadlink >/dev/null && greadlink -f %1$s" $src -}}
	{{- $realSrc = (outputList "bash" (list "-lc" $bashCmd)) | trim -}}
{{- else -}}
	{{- $bashCmd := printf "command -v realpath >/dev/null && realpath '%s' || readlink -f '%s'" $src -}}
	{{- $realSrc = (outputList "bash" (list "-lc" $bashCmd)) | trim -}}
{{- end }}

{{- $cacheDir := trimPrefix .chezmoi.homeDir .chezmoi.cacheDir -}}
{{- $cacheDir = trimPrefix "/" $cacheDir -}}
{{- $envRoot := (dir (dir $realSrc)) -}}
{{- $sourceDir := (dir $realSrc) -}}

sourceDir = "{{ $sourceDir }}"

[data]
	envRoot = "{{ $envRoot }}"
	cacheDir = "{{ $cacheDir }}"

[data.gk]
	rootDir				= "{{ $envRoot }}"
	relativeCacheDir	= "{{ $cacheDir }}"
	absoluteCacheDir	= "{{ .chezmoi.cacheDir }}"

[data.gk.base]
	url				= "{{ index $gkBase "url" }}"
	relativeDir		= "{{ index $gkBase "relativeDir" }}"
	absoluteDir		= "{{ index $gkBase "absoluteDir" }}"
	type			= "{{ index $gkBase "type" }}"
	clone.args		= {{ index $gkBase "cloneArgs" | toJson }}
	pull.args		= {{ index $gkBase "pullArgs"  | toJson }}
	refreshPeriod	= "{{ index $gkBase "refreshPeriod" }}"
